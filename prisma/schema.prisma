generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  login        String
  password     String
  version      Int      @default(1)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  refreshToken String?
}

model Artist {
  id     String  @id @default(uuid())
  name   String
  grammy Boolean
  albums Album[]
  tracks Track[]

  favorites  Favorites? @relation(fields: [favoriteId], references: [id], onDelete: SetNull)
  favoriteId String?
}

model Album {
  id       String  @id @default(uuid())
  name     String
  year     Int
  tracks   Track[]
  artist   Artist? @relation(fields: [artistId], references: [id], onDelete: SetNull)
  artistId String?

  favorites  Favorites? @relation(fields: [favoriteId], references: [id], onDelete: SetNull)
  favoriteId String?
}

model Track {
  id       String  @id @default(uuid())
  name     String
  artist   Artist? @relation(fields: [artistId], references: [id], onDelete: SetNull)
  artistId String?
  album    Album?  @relation(fields: [albumId], references: [id], onDelete: SetNull)
  albumId  String?
  duration Float

  favorites  Favorites? @relation(fields: [favoriteId], references: [id], onDelete: SetNull)
  favoriteId String?
}

model Favorites {
  id      String   @id @default(uuid())
  artists Artist[]
  albums  Album[]
  tracks  Track[]
}
